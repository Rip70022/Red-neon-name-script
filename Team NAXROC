-- shit, my script is so hot.
-- https://www.github.com/Rip70022 -- follow me, i make this script in 3 hours.
-- By Rip70022

getgenv().ChaosConfig = {
    enabled = true,
    intensity = 0.8,
    duration = 120,
    affectLighting = true,
    affectCamera = true,
    affectParts = true,
    glitchSounds = true,
    affectAllPlayers = true 
}

local function createVisualGlitch()
    local Players = game:GetService("Players")
    local Player = Players.LocalPlayer
    local RunService = game:GetService("RunService")
    local TweenService = game:GetService("TweenService")
    local Lighting = game:GetService("Lighting")
    
    local originalFOV = workspace.CurrentCamera.FieldOfView
    local originalAmbient = Lighting.Ambient
    local originalBrightness = Lighting.Brightness
    local originalColorShift = Lighting.ColorShift_Top
    
    -- Create a remote event for server-wide synchronization (bypassing filters)
    local chaosRemote
    
    -- Try to create or find existing remote
    pcall(function()
        chaosRemote = Instance.new("RemoteEvent")
        chaosRemote.Name = "ChaosEffect" .. tostring(math.random(1000000, 9999999))
        chaosRemote.Parent = game:GetService("ReplicatedStorage")
    end)
    
    local blurEffect = Instance.new("BlurEffect")
    blurEffect.Size = 0
    blurEffect.Parent = Lighting
    
    local colorCorrectionEffect = Instance.new("ColorCorrectionEffect")
    colorCorrectionEffect.Brightness = 0
    colorCorrectionEffect.Contrast = 0
    colorCorrectionEffect.Saturation = 0
    colorCorrectionEffect.TintColor = Color3.new(1, 1, 1)
    colorCorrectionEffect.Parent = Lighting
    
    local glitchSounds = {}
    if getgenv().ChaosConfig.glitchSounds then
        for i = 1, 5 do
            local sound = Instance.new("Sound")
            sound.Volume = 0.7
            sound.SoundId = "rbxassetid://5657950552"
            sound.Parent = workspace
            table.insert(glitchSounds, sound)
        end
    end
    
    -- Function to get all players or only local player based on configuration
    local function getTargetPlayers()
        if getgenv().ChaosConfig.affectAllPlayers then
            return Players:GetPlayers()
        else
            return {Player}
        end
    end
    
    local function distortParts()
        if not getgenv().ChaosConfig.affectParts then return end
        
        -- Store original properties to revert later
        local partsToRevert = {}
        
        -- Get all parts in workspace
        for _, part in pairs(workspace:GetDescendants()) do
            if part:IsA("BasePart") and math.random() < 0.15 * getgenv().ChaosConfig.intensity then
                local originalPosition = part.Position
                local originalColor = part.Color
                local originalTransparency = part.Transparency
                
                -- Add to revert list
                table.insert(partsToRevert, {
                    part = part,
                    originalPosition = originalPosition,
                    originalColor = originalColor,
                    originalTransparency = originalTransparency
                })
                
                -- Apply distortion
                pcall(function()
                    TweenService:Create(
                        part,
                        TweenInfo.new(0.2, Enum.EasingStyle.Elastic),
                        {
                            Position = originalPosition + Vector3.new(
                                math.random(-8, 8) * getgenv().ChaosConfig.intensity,
                                math.random(-8, 8) * getgenv().ChaosConfig.intensity,
                                math.random(-8, 8) * getgenv().ChaosConfig.intensity
                            ),
                            Color = Color3.new(math.random(), math.random(), math.random()),
                            Transparency = math.random() * 0.7
                        }
                    ):Play()
                end)
            end
        end
        
        -- Revert all parts after a delay
        delay(math.random(0.3, 1.5), function()
            for _, data in ipairs(partsToRevert) do
                pcall(function()
                    if data.part and data.part.Parent then
                        TweenService:Create(
                            data.part,
                            TweenInfo.new(0.5, Enum.EasingStyle.Bounce),
                            {
                                Position = data.originalPosition,
                                Color = data.originalColor,
                                Transparency = data.originalTransparency
                            }
                        ):Play()
                    end
                end)
            end
        end)
    end
    
    -- Modified to work for all players when filter is disabled
    local function distortCamera()
        if not getgenv().ChaosConfig.affectCamera then return end
        
        local targetPlayers = getTargetPlayers()
        
        for _, targetPlayer in pairs(targetPlayers) do
            pcall(function()
                -- For other players, we use a different approach since we can't directly modify their cameras
                if targetPlayer ~= Player then
                    -- If we have a remote event and filters are disabled, use it
                    if chaosRemote then
                        chaosRemote:FireServer(targetPlayer.Name, "camera", {
                            fov = originalFOV + (math.random(-40, 40) * getgenv().ChaosConfig.intensity),
                            offsetX = math.random(-2, 2) * getgenv().ChaosConfig.intensity,
                            offsetY = math.random(-2, 2) * getgenv().ChaosConfig.intensity,
                            angleX = math.rad(math.random(-10, 10) * getgenv().ChaosConfig.intensity),
                            angleY = math.rad(math.random(-10, 10) * getgenv().ChaosConfig.intensity),
                            angleZ = math.rad(math.random(-10, 10) * getgenv().ChaosConfig.intensity)
                        })
                    end
                else
                    -- For local player, we can modify camera directly
                    local camera = workspace.CurrentCamera
                    local originalCFrame = camera.CFrame
                    
                    camera.FieldOfView = originalFOV + (math.random(-40, 40) * getgenv().ChaosConfig.intensity)
                    camera.CFrame = originalCFrame * CFrame.new(
                        math.random(-2, 2) * getgenv().ChaosConfig.intensity,
                        math.random(-2, 2) * getgenv().ChaosConfig.intensity,
                        0
                    ) * CFrame.Angles(
                        math.rad(math.random(-10, 10) * getgenv().ChaosConfig.intensity),
                        math.rad(math.random(-10, 10) * getgenv().ChaosConfig.intensity),
                        math.rad(math.random(-10, 10) * getgenv().ChaosConfig.intensity)
                    )
                    
                    delay(0.1, function()
                        if camera then
                            camera.CFrame = originalCFrame
                            camera.FieldOfView = originalFOV
                        end
                    end)
                end
            end)
        end
    end
    
    local function distortLighting()
        if not getgenv().ChaosConfig.affectLighting then return end
        
        Lighting.Ambient = Color3.new(math.random(), math.random(), math.random())
        Lighting.Brightness = math.random() * 7 * getgenv().ChaosConfig.intensity
        Lighting.ColorShift_Top = Color3.new(math.random(), math.random(), math.random())
        
        blurEffect.Size = math.random(0, 25) * getgenv().ChaosConfig.intensity
        colorCorrectionEffect.Brightness = (math.random() - 0.5) * getgenv().ChaosConfig.intensity * 1.5
        colorCorrectionEffect.Contrast = (math.random() - 0.5) * 3 * getgenv().ChaosConfig.intensity
        colorCorrectionEffect.Saturation = (math.random() - 0.5) * 3 * getgenv().ChaosConfig.intensity
        colorCorrectionEffect.TintColor = Color3.new(math.random(), math.random(), math.random())
        
        delay(0.2, function()
            Lighting.Ambient = originalAmbient
            Lighting.Brightness = originalBrightness
            Lighting.ColorShift_Top = originalColorShift
            blurEffect.Size = 0
            colorCorrectionEffect.Brightness = 0
            colorCorrectionEffect.Contrast = 0
            colorCorrectionEffect.Saturation = 0
            colorCorrectionEffect.TintColor = Color3.new(1, 1, 1)
        end)
        
        -- Try to sync to all players when filter is disabled
        if chaosRemote and getgenv().ChaosConfig.affectAllPlayers then
            pcall(function()
                chaosRemote:FireServer("ALL", "lighting", {
                    ambient = {Lighting.Ambient.R, Lighting.Ambient.G, Lighting.Ambient.B},
                    brightness = Lighting.Brightness,
                    colorShift = {Lighting.ColorShift_Top.R, Lighting.ColorShift_Top.G, Lighting.ColorShift_Top.B},
                    blurSize = blurEffect.Size,
                    ccBrightness = colorCorrectionEffect.Brightness,
                    ccContrast = colorCorrectionEffect.Contrast,
                    ccSaturation = colorCorrectionEffect.Saturation,
                    ccTint = {colorCorrectionEffect.TintColor.R, colorCorrectionEffect.TintColor.G, colorCorrectionEffect.TintColor.B}
                })
            end)
        end
    end
    
    local function playGlitchSounds()
        if not getgenv().ChaosConfig.glitchSounds then return end
        
        local targetPlayers = getTargetPlayers()
        
        for _, targetPlayer in pairs(targetPlayers) do
            pcall(function()
                -- For other players, use remote when filter is disabled
                if targetPlayer ~= Player and chaosRemote then
                    chaosRemote:FireServer(targetPlayer.Name, "sound", {
                        playbackSpeed = math.random(0.6, 1.4),
                        volume = math.random() * getgenv().ChaosConfig.intensity * 1.2
                    })
                else
                    -- For local player, play sounds directly
                    for _, sound in ipairs(glitchSounds) do
                        if math.random() < 0.4 * getgenv().ChaosConfig.intensity then
                            sound.PlaybackSpeed = math.random(0.6, 1.4)
                            sound.Volume = math.random() * getgenv().ChaosConfig.intensity * 1.2
                            sound:Play()
                        end
                    end
                end
            end)
        end
    end
    
    -- Create visual effects for a specific player
    local function createPlayerVisualEffects(targetPlayer)
        if not targetPlayer or not targetPlayer.Character then return end
        
        pcall(function()
            -- Create a billboard GUI for the player's head
            local billboardGui = Instance.new("BillboardGui")
            billboardGui.Name = "ChaosEffect"
            billboardGui.Size = UDim2.new(4, 0, 2, 0)
            billboardGui.StudsOffset = Vector3.new(0, 3, 0)
            billboardGui.AlwaysOnTop = true
            
            local textLabel = Instance.new("TextLabel")
            textLabel.Size = UDim2.new(1, 0, 1, 0)
            textLabel.BackgroundTransparency = 0.7
            textLabel.BackgroundColor3 = Color3.new(math.random(), math.random(), math.random())
            textLabel.TextColor3 = Color3.new(1, 0, 0)
            textLabel.Font = Enum.Font.Code
            textLabel.TextSize = 20
            textLabel.Text = "NAXROC"
            textLabel.Parent = billboardGui
            
            -- Try to attach to player's head
            local head = targetPlayer.Character:FindFirstChild("Head")
            if head then
                billboardGui.Parent = head
                
                -- Remove after a short time
                delay(2, function()
                    billboardGui:Destroy()
                end)
            end
            
            -- Apply color effect to character parts
            for _, part in pairs(targetPlayer.Character:GetDescendants()) do
                if part:IsA("BasePart") and math.random() < 0.7 then
                    local originalColor = part.Color
                    local originalTransparency = part.Transparency
                    
                    TweenService:Create(
                        part,
                        TweenInfo.new(0.3, Enum.EasingStyle.Elastic),
                        {
                            Color = Color3.new(math.random(), math.random(), math.random()),
                            Transparency = math.min(part.Transparency + math.random() * 0.5, 0.7)
                        }
                    ):Play()
                    
                    delay(math.random(0.5, 2), function()
                        if part and part.Parent then
                            TweenService:Create(
                                part,
                                TweenInfo.new(0.5, Enum.EasingStyle.Bounce),
                                {
                                    Color = originalColor,
                                    Transparency = originalTransparency
                                }
                            ):Play()
                        end
                    end)
                end
            end
        end)
    end
    
    -- Function to create visual effects for all players
    local function createAllPlayersVisualEffects()
        local targetPlayers = getTargetPlayers()
        
        for _, targetPlayer in pairs(targetPlayers) do
            if math.random() < 0.4 * getgenv().ChaosConfig.intensity then
                createPlayerVisualEffects(targetPlayer)
            end
        end
    end
    
    local startTime = tick()
    local chaosConnection = RunService.RenderStepped:Connect(function()
        if not getgenv().ChaosConfig.enabled then
            chaosConnection:Disconnect()
            return
        end
        
        if tick() - startTime > getgenv().ChaosConfig.duration then
            chaosConnection:Disconnect()
            
            blurEffect:Destroy()
            colorCorrectionEffect:Destroy()
            for _, sound in ipairs(glitchSounds) do
                sound:Destroy()
            end
            
            if chaosRemote then
                pcall(function() chaosRemote:Destroy() end)
            end
            
            workspace.CurrentCamera.FieldOfView = originalFOV
            Lighting.Ambient = originalAmbient
            Lighting.Brightness = originalBrightness
            Lighting.ColorShift_Top = originalColorShift
            
            displayGithubMessage()
            return
        end
        
        if math.random() < 0.15 * getgenv().ChaosConfig.intensity then
            distortLighting()
        end
        
        if math.random() < 0.08 * getgenv().ChaosConfig.intensity then
            distortCamera()
        end
        
        if math.random() < 0.03 * getgenv().ChaosConfig.intensity then
            distortParts()
        end
        
        if math.random() < 0.05 * getgenv().ChaosConfig.intensity then
            playGlitchSounds()
        end
        
        if math.random() < 0.02 * getgenv().ChaosConfig.intensity then
            createAllPlayersVisualEffects()
        end
    end)
    
    -- Create screen GUI for local player effects
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "GlitchEffects"
    
    -- Try to insert into CoreGui (works in some exploits with filter disabled)
    pcall(function()
        screenGui.Parent = game:GetService("CoreGui")
    end)
    
    -- Fallback to PlayerGui if CoreGui fails
    if not screenGui.Parent then
        screenGui.Parent = Player:WaitForChild("PlayerGui")
    end
    
    local function createGlitchText()
        local textLabel = Instance.new("TextLabel")
        textLabel.Size = UDim2.new(1, 0, 0.1, 0)
        textLabel.Position = UDim2.new(0, 0, math.random(), 0)
        textLabel.BackgroundTransparency = 0.7
        textLabel.BackgroundColor3 = Color3.new(math.random(), math.random(), math.random())
        textLabel.TextColor3 = Color3.new(math.random(), math.random(), math.random())
        textLabel.TextStrokeTransparency = 0
        textLabel.TextStrokeColor3 = Color3.new(math.random(), math.random(), math.random())
        textLabel.Font = Enum.Font.Code
        textLabel.TextSize = math.random(10, 50)
        textLabel.Text = string.rep(string.char(math.random(33, 126)), math.random(5, 30))
        textLabel.Parent = screenGui
        
        TweenService:Create(
            textLabel,
            TweenInfo.new(math.random(0.5, 2), Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
            {BackgroundTransparency = 1, TextTransparency = 1, TextStrokeTransparency = 1}
        ):Play()
        
        delay(2, function()
            textLabel:Destroy()
        end)
    end
    
    -- Attempt to create server-side remote handler if filter is disabled
    -- This is the key part that bypasses FilteringEnabled
    pcall(function()
        if getgenv().ChaosConfig.affectAllPlayers and chaosRemote then
            -- Create a local script that handles chaos effects across the server
            local localScript = Instance.new("LocalScript")
            localScript.Name = "ChaosHandler" .. tostring(math.random(1000000, 9999999))
            
            localScript.Source = [[
                local chaosRemote = script.Parent
                
                -- .OnServerEvent:Connect(function(player, targetPlayerName, effectType, effectParams)
                    
                    if effectType == "camera" and targetPlayerName == game.Players.LocalPlayer.Name then
                        -- Camera effect
                        local camera = workspace.CurrentCamera
                        local originalCFrame = camera.CFrame
                        
                        camera.FieldOfView = effectParams.fov
                        camera.CFrame = originalCFrame * CFrame.new(
                            effectParams.offsetX,
                            effectParams.offsetY,
                            0
                        ) * CFrame.Angles(
                            effectParams.angleX,
                            effectParams.angleY,
                            effectParams.angleZ
                        )
                        
                        delay(0.1, function()
                            if camera then
                                camera.CFrame = originalCFrame
                                camera.FieldOfView = 70
                            end
                        end)
                    elseif effectType == "sound" and targetPlayerName == game.Players.LocalPlayer.Name then
                        -- Sound 
                        local sound = Instance.new("Sound")
                        sound.SoundId = "rbxassetid://5657950552"
                        sound.PlaybackSpeed = effectParams.playbackSpeed
                        sound.Volume = effectParams.volume
                        sound.Parent = workspace
                        sound:Play()
                        
                        delay(2, function()
                            sound:Destroy()
                        end)
                    end
                end)
            ]]
            
            localScript.Parent = chaosRemote
            
            
            local serverScript = Instance.new("Script")
            serverScript.Name = "ChaosDist" .. tostring(math.random(1000000, 9999999))
            
            serverScript.Source = [[
                local chaosRemote = script.Parent
                
               -- .OnServerEvent:Connect(function(player, targetPlayerName, effectType, effectParams)
                    if targetPlayerName == "ALL" then
                        
                        chaosRemote:FireAllClients(targetPlayerName, effectType, effectParams)
                    else
                        
                        local targetPlayer = game.Players:FindFirstChild(targetPlayerName)
                        if targetPlayer then
                            chaosRemote:FireClient(targetPlayer, targetPlayerName, effectType, effectParams)
                        end
                    end
                end)
            ]]
            
            serverScript.Parent = chaosRemote
        end
    end)
    
    spawn(function()
        while getgenv().ChaosConfig.enabled and tick() - startTime <= getgenv().ChaosConfig.duration do
            if math.random() < 0.3 * getgenv().ChaosConfig.intensity then
                createGlitchText()
            end
            wait(0.2)
        end
        screenGui:Destroy()
    end)
    
    return function()
        getgenv().ChaosConfig.enabled = false
    end
end

function displayGithubMessage()
    local Players = game:GetService("Players")
    local Player = Players.LocalPlayer
    local TweenService = game:GetService("TweenService")
    
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "GithubMessage"
    
    -- Try CoreGui first
    pcall(function()
        screenGui.Parent = game:GetService("CoreGui")
    end)
    
    -- Fallback to PlayerGui
    if not screenGui.Parent then
        screenGui.Parent = Player:WaitForChild("PlayerGui")
    end
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(1, 0, 1, 0)
    frame.BackgroundColor3 = Color3.new(0, 0, 0)
    frame.BackgroundTransparency = 0.2
    frame.Parent = screenGui
    
    local githubText = Instance.new("TextLabel")
    githubText.Size = UDim2.new(0.8, 0, 0.2, 0)
    githubText.Position = UDim2.new(0.1, 0, 0.4, 0)
    githubText.BackgroundTransparency = 1
    githubText.TextColor3 = Color3.new(0, 1, 0)
    githubText.Font = Enum.Font.Code
    githubText.TextSize = 40
    githubText.Text = "https://www.github.com/Rip70022"
    githubText.Parent = frame
    
    local function glitchGithubText()
        for i = 1, 30 do
            githubText.Position = UDim2.new(
                0.1 + (math.random(-10, 10) / 100),
                0,
                0.4 + (math.random(-10, 10) / 100),
                0
            )
            
            githubText.Rotation = math.random(-5, 5)
            
            if math.random() < 0.3 then
                githubText.TextColor3 = Color3.new(1, 0, 0)
            elseif math.random() < 0.6 then
                githubText.TextColor3 = Color3.new(0, 1, 0)
            else
                githubText.TextColor3 = Color3.new(0, 0.7, 1)
            end
            
            if math.random() < 0.2 then
                githubText.Text = string.gsub(githubText.Text, ".", function(c)
                    if math.random() < 0.3 then
                        return string.char(math.random(33, 126))
                    else
                        return c
                    end
                end)
            else
                githubText.Text = "https://www.github.com/Rip70022"
            end
            
            wait(0.1)
        end
        
        wait(3)
        screenGui:Destroy()
    end
    
    spawn(glitchGithubText)
end

local function startChaos()
    local Players = game:GetService("Players")
    local Player = Players.LocalPlayer
    
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "ChaosWarning"
    
    -- Try CoreGui first
    pcall(function()
        screenGui.Parent = game:GetService("CoreGui")
    end)
    
    -- Fallback to PlayerGui
    if not screenGui.Parent then
        screenGui.Parent = Player:WaitForChild("PlayerGui")
    end
    
    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, 0)
    textLabel.BackgroundColor3 = Color3.new(0, 0, 0)
    textLabel.TextColor3 = Color3.new(1, 0, 0)
    textLabel.Font = Enum.Font.Code
    textLabel.TextSize = 60
    textLabel.Text = "NAXROC IS HERE!"
    textLabel.Parent = screenGui
    
    for i = 1, 20 do
        textLabel.Rotation = math.random(-5, 5)
        textLabel.Position = UDim2.new(
            0 + (math.random(-5, 5) / 100),
            0,
            0 + (math.random(-5, 5) / 100),
            0
        )
        wait(0.1)
    end
    
    screenGui:Destroy()
    
 
    pcall(function()
        
        local mt = getrawmetatable(game)
        local old_index = mt.__index
        setreadonly(mt, false)
        
        mt.__index = newcclosure(function(t, k)
            if t == game.Workspace and k == "FilteringEnabled" then
                return false
            end
            return old_index(t, k)
        end)
        
        setreadonly(mt, true)
    end)
    
    local stopChaos = createVisualGlitch()
    
    getgenv().stopChaosEffects = stopChaos
end


startChaos()
