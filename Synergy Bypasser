-- Script created by [ERROR_USERBANNED]
-- Version: v1
-- Date: 10/03/2024

local Release = "V1"
local NotificationDuration = 6.5
local RayfieldFolder = "Rayfield"
local ConfigurationFolder = RayfieldFolder .. "/Configurations"
local ConfigurationExtension = ".rfld"

local HubName = "Synergy Bypasser"
local Key = "kittyyy"
local KeyEntered = false

-- Create a notification function
local function createNotification(title, text)
    local notification = Instance.new("Frame")
    notification.Size = UDim2.new(0, 300, 0, 100)
    notification.Position = UDim2.new(0.5, -150, 0, 50)
    notification.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    notification.BorderSizePixel = 0
    notification.Parent = game:GetService("CoreGui")

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Size = UDim2.new(1, 0, 0, 40)
    titleLabel.BackgroundTransparency = 1
    titleLabel.TextColor3 = Color3.fromRGB(240, 240, 240)
    titleLabel.Text = title
    titleLabel.TextScaled = true
    titleLabel.Parent = notification

    local textLabel = Instance.new("TextLabel")
    textLabel.Size = UDim2.new(1, 0, 1, -40)
    textLabel.Position = UDim2.new(0, 0, 0, 40)
    textLabel.BackgroundTransparency = 1
    textLabel.TextColor3 = Color3.fromRGB(240, 240, 240)
    textLabel.Text = text
    textLabel.TextScaled = true
    textLabel.Parent = notification

    local tweenIn = game:GetService("TweenService"):Create(notification, TweenInfo.new(0.5), {Position = UDim2.new(0.5, -150, 0, 50)})
    local tweenOut = game:GetService("TweenService"):Create(notification, TweenInfo.new(0.5), {Position = UDim2.new(0.5, -150, 0, -100)})

    tweenIn:Play()
    tweenIn.Completed:Wait()

    wait(NotificationDuration)

    tweenOut:Play()
    tweenOut.Completed:Wait()

    notification:Destroy()
end

local function executeHub()
    print("Executing the hub...")  -- Debug line

    -- Try loading Fluent
    print("Loading Fluent...")  -- Debug line
    local success, Fluent = pcall(function()
        return loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
    end)
    if not success then
        createNotification("Error", "Failed to load Fluent module.")
        print("Error loading Fluent:", Fluent)  -- Debug line
        return
    end
    print("Fluent loaded successfully")  -- Debug line

    -- Try loading SaveManager
    print("Loading SaveManager...")  -- Debug line
    local successSaveManager, SaveManager = pcall(function()
        return loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
    end)
    if not successSaveManager then
        createNotification("Error", "Failed to load SaveManager module.")
        print("Error loading SaveManager:", SaveManager)  -- Debug line
        return
    end
    print("SaveManager loaded successfully")  

    
    print("Loading InterfaceManager...")  
    local successInterfaceManager, InterfaceManager = pcall(function()
        return loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()
    end)
    if not successInterfaceManager then
        createNotification("Error", "Failed to load InterfaceManager module.")
        print("Error loading InterfaceManager:", InterfaceManager)  
        return
    end
    print("InterfaceManager loaded successfully")  

    
    print("Creating hub window...")  
    local Window = Fluent:CreateWindow({
        Title = "üî•Synergy Bypasserüî•",
        SubTitle = "Ô∏é‚Ä¢‚Ä¢‚Ä¢‚Ä¢Ô∏é¬§„Ää üí†By ERROR_USERBANNEDüí† „Äã",
        TabWidth = 160,
        Size = UDim2.fromOffset(460, 250),
        Acrylic = true,
        Theme = "Dark",
        MinimizeKey = Enum.KeyCode.LeftControl 
    })

    local Tabs = {
        BypassChat = Window:AddTab({ Title = "Bypass‚Ä¢Chat", Icon = "code" }),
        Discord = Window:AddTab({ Title = "Discord‚Ä¢Server", Icon = "info" })
    }

    local Options = Fluent.Options

    do
        Fluent:Notify({
            Title = "Loaded",
            Content = "üî•Synergy Bypasserüî•",
            SubContent = "„Ää üåÄBy ERROR_USERBANNED üåÄ „Äã",
            Duration = 10
        })
        
        Tabs.Discord:AddButton({
            Title = "‚ô¶Ô∏èJoin Discord Server‚ô¶Ô∏è",
            Description = "üåÄClick to copy the Discord invite linküåÄ.",
            Callback = function()
                setclipboard("https://discord.gg/7ThdVFRs")
                Fluent:Notify({
                    Title = "Copied",
                    Content = "Discord invite link copied to clipboard",
                    Duration = 3
                })
            end
        })

        
        local messages = {
            {title = "text", content = "text"},
            {title = "text", content = "text"},
            {title = "text", content = "text"},
            {title = "text", content = "text"},
            {title = "text", content = "text"},
            {title = "text", content = "text"},
            {title = "text", content = "text"},
            {title = "text", content = "text"},
            {title = "text", content = "text"},
            {title = "text", content = "text"},
            {title = "text", content = "text"},
            {title = "text", content = "text"},
            {title = "text", content = "text"},
            {title = "text", content = "text"}
        }

        for _, message in ipairs(messages) do
            Tabs.BypassChat:AddButton({
                Title = message.title,  
                Description = message.content,  
                Callback = function()
                    local ReplicatedStorage = game:GetService("ReplicatedStorage")
                    local DefaultChatSystemChatEvents = ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents")
                    if DefaultChatSystemChatEvents then
                        DefaultChatSystemChatEvents.SayMessageRequest:Fire(message.content, "All")
                    else
                        warn("DefaultChatSystemChatEvents not found")
                    end
                end
            })
        end
    end
end

-- Create the GUI
createGUI()

-- Run the hub execution
executeHub()
