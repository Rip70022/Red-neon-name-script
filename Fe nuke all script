-- by shadow_sadist, ERROR_USERBANNED = Roblox+USERNAME
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Workspace = game:GetService("Workspace")

-- Function to create a notification at the start
local function createStartupNotification()
    local notification = Instance.new("TextLabel")
    notification.Size = UDim2.new(0, 300, 0, 50)
    notification.Position = UDim2.new(0.5, -150, 0, 50)
    notification.Text = "üî•Script by ERROR_USERBANNEDüî•"
    notification.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text
    notification.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Black background
    notification.BackgroundTransparency = 0.5
    notification.Parent = LocalPlayer:WaitForChild("PlayerGui")

    -- Fade out the notification
    for i = 1, 10 do
        wait(0.1)
        notification.BackgroundTransparency = notification.BackgroundTransparency + 0.05
    end
    notification:Destroy()
end

local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

local Folder = Instance.new("Folder", Workspace)
local Part = Instance.new("Part", Folder)
local Attachment1 = Instance.new("Attachment", Part)
Part.Anchored = true
Part.CanCollide = false
Part.Transparency = 1

local blackHoleActive = false

-- Function to create a notification
local function createNotification(message)
    local notification = Instance.new("TextLabel")
    notification.Size = UDim2.new(0, 300, 0, 50)
    notification.Position = UDim2.new(0.5, -150, 0, 50)
    notification.Text = message
    notification.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text
    notification.BackgroundColor3 = Color3.fromRGB(0, 0, 0) -- Black background
    notification.BackgroundTransparency = 0.5
    notification.Parent = LocalPlayer:WaitForChild("PlayerGui")

    -- Fade out the notification
    for i = 1, 10 do
        wait(0.1)
        notification.BackgroundTransparency = notification.BackgroundTransparency + 0.05
    end
    notification:Destroy()
end

local function ForcePart(v)
    if v:IsA("Part") and not v.Anchored and not v.Parent:FindFirstChild("Humanoid") and not v.Parent:FindFirstChild("Head") and v.Name ~= "Handle" then
        v.CanCollide = false
        local bodyPosition = Instance.new("BodyPosition", v)
        bodyPosition.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
        bodyPosition.P = 10000
        bodyPosition.D = 100

        -- Store the part's bodyPosition to control later
        return bodyPosition
    end
end

local function toggleBlackHole()
    blackHoleActive = not blackHoleActive
    if blackHoleActive then
        createNotification("‚ö†Ô∏èNuke All Activated!‚ö†Ô∏è") -- Notify activation
        local bodyPositions = {}

        -- Force all existing parts
        for _, v in next, Workspace:GetDescendants() do
            local bodyPosition = ForcePart(v)
            if bodyPosition then
                table.insert(bodyPositions, {part = v, bodyPosition = bodyPosition})
            end
        end

        Workspace.DescendantAdded:Connect(function(v)
            if blackHoleActive then
                local bodyPosition = ForcePart(v)
                if bodyPosition then
                    table.insert(bodyPositions, {part = v, bodyPosition = bodyPosition})
                end
            end
        end)

        spawn(function()
            while blackHoleActive do
                wait(0.1)  -- Small delay to avoid lag
                if humanoidRootPart then
                    Attachment1.WorldCFrame = humanoidRootPart.CFrame
                end

                for _, entry in ipairs(bodyPositions) do
                    local part = entry.part
                    local bodyPosition = entry.bodyPosition

                    -- Move the part towards each player's HumanoidRootPart
                    for _, player in pairs(Players:GetPlayers()) do
                        if player ~= LocalPlayer then
                            local playerHumanoidRootPart = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
                            if playerHumanoidRootPart then
                                bodyPosition.Position = playerHumanoidRootPart.Position
                            end
                        end
                    end
                end
            end
        end)
    else
        createNotification("‚ö†Ô∏èNuke All Deactivated!‚ö†Ô∏è") -- Notify deactivation
    end
end

local function createControlButton()
    local screenGui = Instance.new("ScreenGui")
    local button = Instance.new("TextButton")

    screenGui.Name = "BlackHoleControlGUI"
    screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

    button.Name = "ToggleBlackHoleButton"
    button.Size = UDim2.new(0, 200, 0, 50)
    button.Position = UDim2.new(0.5, -100, 0, 100)
    button.Text = "‚ò¢Ô∏èActivate Nuke All‚ò¢Ô∏è"
    button.TextColor3 = Color3.fromRGB(144, 238, 144) -- Light green
    button.BackgroundColor3 = Color3.fromRGB(0, 100, 0) -- Dark green
    button.BorderSizePixel = 0
    button.Parent = screenGui

    local uicorner = Instance.new("UICorner")
    uicorner.CornerRadius = UDim.new(0, 15)
    uicorner.Parent = button

    -- Function to drag the button
    local function startDrag(input)
        local initialPosition = button.Position
        local startPosition = input.Position

        local function updateDrag(input)
            local delta = input.Position - startPosition
            button.Position = UDim2.new(initialPosition.X.Scale, initialPosition.X.Offset + delta.X, initialPosition.Y.Scale, initialPosition.Y.Offset + delta.Y)
        end

        local function endDrag()
            button.InputChanged:Disconnect(updateDrag)
            button.InputEnded:Disconnect(endDrag)
        end

        button.InputChanged:Connect(updateDrag)
        button.InputEnded:Connect(endDrag)
    end

    button.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            startDrag(input)
        end
    end)

    button.MouseButton1Click:Connect(function()
        toggleBlackHole()
        if blackHoleActive then
            button.Text = "‚ò¢Ô∏èDeactivate nuke all‚ò¢Ô∏è"
        else
            button.Text = "‚ò¢Ô∏èActivate nuke all‚ò¢Ô∏è"
        end
    end)
end

createControlButton()

